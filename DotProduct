Shader "Custom/DotProduct"
{
SubShader {
  CGPROGRAM
  #pragma surface surf Lambert
  struct Input{
    float 3 viewDir; //use the view direction with the dot product to calculate a value for albedo
  };
  
  void surf(Input IN, input SurfaceOutput o){
    half dotp = dot(IN.viewDir, o.Normal); //calculate the dot product of viewDir vector against normal vector
    
    //colour blue for all the vectors facing the viewer
    //half dotp = 1-dot(IN.viewDir, o.Normal);
    
    o.Albedo = float3(dotp,1,1);
    
    //blue inside glow effect
    //o.Albedo = float3(0,1-dot(IN.viewDir, o.Normal),1); 
  }
  ENDCG
  }
  Fallback "Diffuse"
  }
  //when the viewDir vector is parallel with the normal: dotp = 1 => 1,1,1(white)
